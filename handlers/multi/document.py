# handlers/multi/document.py
import os
from telebot import types
from services.storage import save_file
from services.watermark import apply_watermark

def handle_multi_document(bot, message, state):
    chat_id = message.chat.id
    step = state.get("step")

    if step == "multi_document" and message.document:
        doc_path = save_file(bot, message, "media")
        if "media_files" not in state:
            state["media_files"] = []
        state["media_files"].append(doc_path)
        bot.send_message(chat_id, f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω. –í—Å–µ–≥–æ: {len(state['media_files'])}")

    elif step == "multi_document" and message.text == "‚úÖ –ì–æ—Ç–æ–≤–æ":
        if not state.get("media_files"):
            bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç.")
            return

        state["step"] = "multi_document_watermark"
        bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫ (—Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç).")

    elif step == "multi_document_watermark" and (message.photo or message.document):
        watermark_path = save_file(bot, message, "media")
        state["watermark_path"] = watermark_path
        state["step"] = "multi_document_choose_position"

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add("–í–∞—Ä–∏–∞–Ω—Ç 1", "–í–∞—Ä–∏–∞–Ω—Ç 2", "–í–∞—Ä–∏–∞–Ω—Ç 3", "–í–∞—Ä–∏–∞–Ω—Ç 4")
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ –ø–æ–∑–∏—Ü–∏—é –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞:", reply_markup=markup)

    elif step == "multi_document_choose_position":
        try:
            variant = int(message.text.split()[-1])
        except:
            bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–∞—Ä–∏–∞–Ω—Ç–∞.")
            return

        bot.send_message(chat_id, f"‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é {len(state['media_files'])} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
        results = []
        for path in state["media_files"]:
            out = os.path.splitext(path)[0] + f"_wm_v{variant}.jpg"
            try:
                apply_watermark(path, out, state["watermark_path"], variant)
                results.append(out)
            except Exception as e:
                bot.send_message(chat_id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")

        for out_path in results:
            with open(out_path, "rb") as f:
                bot.send_document(chat_id, f)

        bot.send_message(chat_id, "‚úÖ –ì–æ—Ç–æ–≤–æ! –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")
        state.clear()
        bot.send_message(chat_id, "–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
# –Ω–µ—Å–∫–æ–ª—å–∫–æ ‚Äî –¥–æ–∫—É–º–µ–Ω—Ç—ã